---
openapi: 3.0.1
info:
  title: Memeory Seal
  description: test
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- JWT: []
tags:
- name: Aws
  description: image upload
paths:
  "/users/{userId}":
    get:
      tags:
      - User
      operationId: getDetail
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserResponseDto"
    put:
      tags:
      - User
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserUpdateDto"
  "/time-capsules/{capsuleId}":
    get:
      tags:
      - Time Capsule
      operationId: getDetail_2
      parameters:
      - name: capsuleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TimeCapsuleResponseDto"
    put:
      tags:
      - Time Capsule
      operationId: updateTimeCapsule
      parameters:
      - name: capsuleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TimeCapsuleUpdateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TimeCapsuleUpdateDto"
  "/users/create":
    post:
      tags:
      - User
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreateDto"
        required: true
      responses:
        '200':
          description: OK
  "/time-capsules/create":
    post:
      tags:
      - Time Capsule
      operationId: createTimeCapsule
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TimeCapsuleCreateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TimeCapsule"
  "/s3/upload":
    post:
      tags:
      - Aws
      operationId: uploadFile
      parameters:
      - name: targetType
        in: query
        required: true
        schema:
          type: string
          enum:
          - PROFILE
          - TIME_CAPSULE
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/auth/reissue":
    post:
      tags:
      - Auth
      operationId: reissueAccessToken
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/GeneratedToken"
  "/users/me":
    get:
      tags:
      - User
      operationId: getDetail_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserResponseDto"
  "/time-capsules/{capsuleId}/collaborators":
    get:
      tags:
      - Contributor
      operationId: getDetail_3
      parameters:
      - name: capsuleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContributorResponseDto"
  "/time-capsules/my":
    get:
      tags:
      - Time Capsule
      operationId: getMyTimeCapsule
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeCapsuleNameDto"
  "/auth/login/google":
    get:
      tags:
      - Auth
      operationId: loginGoogle
      responses:
        '200':
          description: OK
  "/auth/login/apple":
    get:
      tags:
      - Auth
      operationId: loginApple
      responses:
        '200':
          description: OK
  "/auth/logout":
    delete:
      tags:
      - Auth
      operationId: logout
      parameters:
      - name: Authroization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
components:
  schemas:
    UserUpdateDto:
      type: object
      properties:
        nickname:
          type: string
        profileUrl:
          type: string
        email:
          type: string
    TimeCapsuleUpdateDto:
      type: object
      properties:
        title:
          type: string
        buriedAt:
          type: string
          format: date-time
        openedAt:
          type: string
          format: date-time
        timeCapsuleStatus:
          type: string
          enum:
          - OPENED
          - BURIED
          - BEFOREBURIED
        updatedAt:
          type: string
          format: date-time
    UserCreateDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nickname:
          type: string
        profileUrl:
          type: string
        email:
          type: string
        userActiveStatus:
          type: boolean
        role:
          type: string
          enum:
          - USER
          - ADMIN
    TimeCapsuleCreateDto:
      type: object
      properties:
        title:
          type: string
        buriedAt:
          type: string
          format: date-time
        openedAt:
          type: string
          format: date-time
        timeCapsuleStatus:
          type: string
          enum:
          - OPENED
          - BURIED
          - BEFOREBURIED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        timeCapsuleActiveStatus:
          type: boolean
        userId:
          type: integer
          format: int64
    TimeCapsule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        buriedAt:
          type: string
          format: date-time
        openedAt:
          type: string
          format: date-time
        timeCapsuleImage:
          type: string
        timeCapsuleStatus:
          type: string
          enum:
          - OPENED
          - BURIED
          - BEFOREBURIED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        timeCapsuleActiveStatus:
          type: boolean
        userId:
          type: integer
          format: int64
    GeneratedToken:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    UserResponseDto:
      type: object
      properties:
        nickname:
          type: string
        profileUrl:
          type: string
        email:
          type: string
    TimeCapsuleResponseDto:
      type: object
      properties:
        title:
          type: string
        buriedAt:
          type: string
          format: date-time
        openedAt:
          type: string
          format: date-time
        timeCapsuleActiveStatus:
          type: boolean
    ContributorResponseDto:
      type: object
      properties:
        contributorRole:
          type: string
          enum:
          - HOST
          - CONTRIBUTOR
        bury:
          type: boolean
        userId:
          type: integer
          format: int64
    TimeCapsuleNameDto:
      type: object
      properties:
        timeCapsuleId:
          type: integer
          format: int64
        title:
          type: string
        role:
          type: string
          enum:
          - HOST
          - CONTRIBUTOR
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
